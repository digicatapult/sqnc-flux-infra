logLevel: debug
externalSqncNode:
  host: sqnc-node
  port: 9944
externalSqncIpfs:
  host: ipfs-order-sqnc-ipfs-api
  port: 5001
externalSqncIdentity:
  host: order-identity-service-sqnc-identity-service
  port: 3000
auth:
  clientId: 'l3'
  publicIdpOrigin: "https://auth.dsch-l3.com"
  internalIdpOrigin: "http://keycloak-http.keycloak.svc.cluster.local"
  idpPathPrefix: ""
  oauth2Realm: order
  internalRealm: order-internal
  internalClientId: l3
  externalRealm: order-external
ingress:
  enabled: true
  ingressClassName: nginx-order
  hostname: order.dsch-l3.com
authzWebhook: http://order-matchmaker-api-sqnc-matchmaker-api.order.svc.cluster.local:3000/v1/authz
node:
  enabled: false
postgresql:
  global:
    security:
      allowInsecureImages: true
    imagePullSecrets:
      - name: dockerhub
  image:
    repository: bitnamilegacy/postgresql
  volumePermissions:
    image:
      repository: bitnamilegacy/os-shell
  primary:
    persistence:
      storageClass: managed-csi-premium
      size: 15Gi
  metrics:
    enabled: true
    image:
      repository: bitnamilegacy/postgres-exporter
    serviceMonitor:
      enabled: true
      namespace: order
      relabelings:
        - action: replace
          sourceLabels: [namespace]
          targetLabel: kubernetes_namespace
podAnnotations:
  instrumentation.opentelemetry.io/inject-nodejs: "monitoring/nodejs-instrumentation"
